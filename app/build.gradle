/*
 * Copyright 2018 Phil Shadlyn
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.3"

    signingConfigs {
        release {
            def keystore = file('keystore.properties')
            if (keystore.exists()) {
                Properties keyProps = new Properties()
                keyProps.load(new FileInputStream(keystore))
                storeFile file(keyProps["store"])
                storePassword keyProps["storePass"]
                keyAlias keyProps["alias"]
                keyPassword keyProps["pass"]
            }
        }
    }

    defaultConfig {
        applicationId "com.physphil.android.unitconverterultimate"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 50600
        versionName '5.6'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "distribution"
    productFlavors {
        base {
            // Basic build
            dimension "distribution"
        }
        google {
            // Adds the option to donate to the developer
            // Adds Firebase crash analytics
            dimension "distribution"
        }
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
// Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

// Android Support
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.1'

// Third-party
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.4'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.4'
    implementation('com.squareup.retrofit2:converter-simplexml:2.6.4') {
        exclude module: 'xpp3'
        exclude module: 'stax-api'
    }

    //Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    //RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.20'

// Flavor
    //googleImplementation 'com.google.firebase:firebase-crash:x.y.z'
    googleImplementation 'com.android.billingclient:billing:2.2.0'

// Debug
    debugImplementation 'com.facebook.stetho:stetho:1.5.1'

// Testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.9.0'
}

// According to setup, this needs to be at bottom of file - https://firebase.google.com/docs/android/setup
// Only apply the google-service plugin if the config file exists.
if (file('google-services.json').exists()) {
    apply plugin: 'com.google.gms.google-services'
}
